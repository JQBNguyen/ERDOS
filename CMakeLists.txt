cmake_minimum_required(VERSION 3.18)
project(ERDOS)

set(CMAKE_CXX_STANDARD 20)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++20 -fopenmp")
find_package(OpenMP)

add_executable(ERDOS erdos.cpp bb_covering_tree.cpp cc_embedded_graph.cpp edgecode.cpp find_a_trail.cpp make_cc.cpp ply_to_embedding.cpp)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_COMPILER_IS_CLANGCXX)
    if(OpenMP_CXX_FOUND)
        target_compile_options(ERDOS PRIVATE ${OpenMP_CXX_FLAGS})
        target_link_libraries(ERDOS PRIVATE OpenMP::OpenMP_CXX)
    else()
        target_compile_options(ERDOS PRIVATE -fopenmp)
        target_link_options(project PRIVATE -fopenmp)
    endif()
endif()

if(MSVC)
    target_compile_options(ERDOS PRIVATE /openmp)
    target_link_libraries(ERDOS PRIVATE legacy_stdio_definitions)
endif()

if(APPLE)
    find_package(libomp QUIET)
    if (libomp_FOUND)
        target_link_libraries(ERDOS PRIVATE libomp)
    endif()
endif()

if(WIN32 AND NOT MSVC)
    target_compile_options(ERDOS PRIVATE -fopenmp)
    target_link_options(ERDOS PRIVATE -fopenmp)
endif()